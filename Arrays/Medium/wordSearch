

    //with O(n*m*4**n) time and constant space
    bool dfs(vector<vector<char>>& board, int i,int j,string word,int pos){
        if(pos==word.length())
            return true;
        int m = board.size();
        int n = board[0].size();
        if(i<0||i==m||j<0||j==n||word[pos]!=board[i][j])
            return false;
        board[i][j]='-';
        bool val = dfs(board,i+1,j,word,pos+1)||dfs(board,i-1,j,word,pos+1)||dfs(board,i,j+1,word,pos+1)||dfs(board,i,j-1,word,pos+1);
        board[i][j]=word[pos];
        return val;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m = board.size();
        int n = board[0].size();
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(dfs(board,i,j,word,0)){
                    return true;
                }
            }
        }
        return false;
    }
