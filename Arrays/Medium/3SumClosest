
    //with O(n*n) time and constant space
    //https://leetcode.com/problems/3sum-closest/
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        int n = nums.size();
        int value=-1;
        for(int i=0;i<n;i++){
            if(i>0 && nums[i]==nums[i-1])
                continue;
            int sum = nums[i];
            int l = i+1;
            int r = n-1;
            while(l<r){
                int total = sum+nums[l]+nums[r];
                if(value==-1 || abs(value-target)>abs(total-target))
                    value=total;
                while(r>0 && (nums[r]==nums[r-1])){
                    r--;
                }
                if(total>target)
                    r--;
                else
                    l++;
            }
        }
        return value;
    }
