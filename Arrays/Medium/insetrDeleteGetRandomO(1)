//restricting the duplicates
class RandomizedSet {
public:
    vector<int> list;
    unordered_map<int,int> mp;
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(mp.count(val)!=0)
            return false;
        list.push_back(val);
        mp[val]=list.size()-1;
        return true;
    }
    
    bool remove(int val) {
        if(mp.count(val)==0)
            return false;
        int ind = mp[val];
        int size = list.size()-1;
        mp.erase(val);
        if(ind!= size){
            int num = list[size];
            mp[num]=ind;
            list[ind]=num;
        }
        list.pop_back();
        return true;
    }
    
    int getRandom() {
        int r = rand()%list.size();
        return list[r];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
