
    //with O(n) space and O(n*n) time;
    //https://leetcode.com/problems/longest-increasing-subsequence/
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        int dp[n];
        memset(dp,0,sizeof(dp));
        int lis = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[j]<nums[i] && dp[i]<dp[j]+1)
                    dp[i]=1+dp[j];
                lis = max(lis,dp[i]);
            }
        }
        return lis+1;
        
    }
