
    //with O(n*n) time and space
    //https://leetcode.com/problems/longest-arithmetic-subsequence/
    int longestArithSeqLength(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> nmp(n,vector<int>(501,1));
        vector<vector<int>> pmp(n,vector<int>(501,1));
        int mv =0;
        for(int i=0;i<n;i++){
            for(int j=0;j<i;j++){
                int diff = nums[i]-nums[j];
                if(diff<0){
                    nmp[i][-diff]= 1+nmp[j][-diff];
                    mv = max(mv,nmp[i][-diff]);
                }else{
                    pmp[i][diff]= 1+pmp[j][diff];
                    mv = max(mv,pmp[i][diff]);
                }
            }
        }
        return mv;
    }
