//https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/
//with O(n) time and space complexity


class Solution {
public:
    int minTaps(int n, vector<int>& ranges) {
        vector<int> distance(n+1);
        for(int i=0;i<=n;i++){
            distance[i]=i;
        }
        for(int i=0;i<=n;i++){
            int low = i-ranges[i];
            int high = i+ranges[i];
            if(low<0)
                low=0;
            if(high>n)
                high=n;
             distance[low]=max(distance[low],high);
        }
        // for(int i=0;i<n;i++){
        //     cout << i << " " << distance[i] << "\n";
        // }
        int count = 0;
        int currReach = 0;
        int maxReach = 0;
        for(int i=0;i<=n;i++){
            maxReach = max(maxReach,distance[i]);
            if(i==currReach){
                currReach = maxReach;
                maxReach =0;
                count++;
            }else if(i>currReach)
                return -1;
        }
        return count-1;
    }
};
